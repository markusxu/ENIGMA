from collections import deque

import random

Rotors_1_P = [12, 94, 33, 81, 78, 47, 79, 29, 88, 62, 8, 14, 76, 3, 67, 91, 65, 75, 20, 68, 58, 13, 83, 61, 84, 66, 87,
              93, 71, 41, 2, 92, 72, 17, 7, 86, 40, 85, 44, 52, 18, 15, 73, 82, 10, 24, 74, 45, 60, 21, 49, 46, 95, 39,
              57, 77, 63, 34, 55, 70, 37, 36, 16, 32, 80, 0, 22, 56, 9, 51, 89, 4, 26, 30, 6, 90, 5, 64, 31, 1, 25, 19,
              27, 28, 48, 42, 23, 38, 53, 50, 35, 43, 69, 11, 59, 54]
Rotors_2_P = [33, 48, 16, 71, 58, 30, 78, 6, 90, 28, 86, 26, 35, 3, 56, 60, 51, 19, 34, 69, 57, 20, 17, 39, 49, 75, 84,
              74, 1, 47, 55, 27, 65, 88, 64, 59, 46, 54, 5, 94, 29, 36, 14, 68, 89, 24, 52, 91, 12, 44, 40, 38, 50, 7,
              9, 31, 37, 4, 32, 63, 21, 95, 8, 61, 13, 25, 80, 41, 2, 62, 83, 23, 67, 0, 72, 66, 43, 93, 11, 42, 85, 22,
              18, 53, 73, 87, 70, 77, 82, 92, 81, 10, 76, 79, 15, 45]
Rotors_3_P = [93, 90, 46, 84, 62, 1, 3, 86, 40, 72, 41, 17, 13, 38, 94, 33, 4, 32, 75, 31, 83, 81, 2, 91, 71, 47, 55,
              28, 37, 21, 66, 50, 79, 0, 65, 34, 48, 9, 89, 77, 63, 59, 5, 82, 85, 56, 11, 15, 44, 18, 68, 52, 58, 26,
              78, 19, 73, 74, 64, 60, 23, 20, 49, 53, 67, 45, 92, 16, 12, 35, 51, 61, 43, 80, 95, 30, 76, 87, 88, 24, 7,
              54, 25, 22, 70, 10, 69, 29, 14, 57, 39, 42, 8, 36, 6, 27]
Rotors_4_P = [41, 90, 48, 68, 77, 30, 87, 28, 10, 66, 36, 73, 80, 24, 1, 89, 13, 59, 92, 82, 37, 14, 16, 86, 31, 70, 38,
              9, 43, 4, 42, 40, 78, 64, 21, 20, 29, 6, 44, 75, 94, 76, 91, 45, 18, 0, 27, 67, 17, 53, 32, 8, 95, 81, 74,
              79, 7, 57, 3, 63, 55, 54, 88, 71, 65, 12, 62, 33, 85, 2, 11, 22, 50, 25, 34, 93, 83, 61, 39, 56, 69, 26,
              52, 49, 15, 84, 5, 35, 46, 19, 58, 51, 72, 47, 60, 23]
Rotors_5_P = [88, 60, 38, 53, 34, 75, 82, 37, 12, 5, 44, 28, 76, 41, 93, 17, 24, 14, 42, 90, 85, 25, 91, 77, 69, 45, 64,
              10, 74, 68, 57, 59, 61, 3, 63, 86, 49, 48, 80, 62, 46, 39, 95, 72, 21, 66, 22, 83, 92, 33, 65, 87, 52, 89,
              78, 2, 19, 26, 0, 58, 30, 35, 18, 67, 8, 13, 11, 15, 94, 4, 79, 6, 29, 40, 43, 50, 32, 71, 55, 73, 70, 23,
              51, 84, 47, 36, 1, 27, 54, 31, 81, 9, 16, 56, 7, 20]

Reflector_1 = [2, 8, 0, 11, 12, 13, 14, 17, 1, 19, 20, 3, 4, 5, 6, 21, 22, 7, 23, 9, 10, 15, 16, 18, 26, 31, 24, 35, 37,
               38, 39, 25, 40, 41, 43, 27, 44, 28, 29, 30, 32, 33, 46, 34, 36, 48, 42, 49, 45, 47, 51, 50, 53, 52, 56,
               57, 54, 55, 61, 62, 64, 58, 59, 65, 60, 63, 67, 66, 69, 68, 73, 76, 78, 70, 79, 80, 71, 82, 72, 74, 75,
               85, 77, 86, 88, 81, 83, 89, 84, 87, 91, 90, 94, 95, 92, 93]
Reflector_2 = [81, 19, 76, 22, 41, 8, 37, 43, 5, 49, 35, 89, 36, 68, 90, 84, 40, 25, 83, 1, 82, 29, 3, 28, 64, 17, 53,
               92, 23, 21, 44, 94, 70, 74, 69, 10, 12, 6, 59, 47, 16, 4, 71, 7, 30, 54, 86, 39, 73, 9, 72, 58, 88, 26,
               45, 60, 93, 65, 51, 38, 55, 80, 78, 75, 24, 57, 95, 87, 13, 34, 32, 42, 50, 48, 33, 63, 2, 79, 62, 77,
               61, 0, 20, 18, 15, 91, 46, 67, 52, 11, 14, 85, 27, 56, 31, 66]
Reflector_3 = [65, 51, 33, 20, 72, 40, 22, 83, 30, 71, 41, 86, 34, 57, 56, 26, 39, 59, 61, 82, 3, 79, 6, 78, 62, 93, 15,
               66, 91, 37, 8, 58, 48, 2, 12, 67, 77, 29, 53, 16, 5, 10, 64, 45, 94, 43, 88, 75, 32, 63, 54, 1, 95, 38,
               50, 68, 14, 13, 31, 17, 81, 18, 24, 49, 42, 0, 27, 35, 55, 89, 76, 9, 4, 74, 73, 47, 70, 36, 23, 21, 92,
               60, 19, 7, 90, 87, 11, 85, 46, 69, 84, 28, 80, 25, 44, 52]
Reflector_4 = [64, 62, 94, 46, 26, 84, 51, 17, 88, 31, 44, 29, 67, 25, 85, 91, 20, 7, 70, 76, 16, 95, 45, 50, 83, 13, 4,
               52, 54, 11, 87, 9, 38, 75, 92, 42, 66, 73, 32, 82, 79, 80, 35, 59, 10, 22, 3, 69, 57, 58, 23, 6, 27, 81,
               28, 89, 93, 48, 49, 43, 77, 90, 1, 71, 0, 78, 36, 12, 72, 47, 18, 63, 68, 37, 86, 33, 19, 60, 65, 40, 41,
               53, 39, 24, 5, 14, 74, 30, 8, 55, 61, 15, 34, 56, 2, 21]
Reflector_5 = [11, 52, 59, 43, 26, 39, 31, 51, 53, 48, 77, 0, 82, 50, 89, 64, 83, 67, 91, 60, 86, 68, 58, 88, 38, 49, 4,
               44, 71, 74, 72, 6, 75, 40, 62, 36, 35, 94, 24, 5, 33, 79, 70, 3, 27, 54, 76, 92, 9, 25, 13, 7, 1, 8, 45,
               80, 93, 87, 22, 2, 19, 63, 34, 61, 15, 78, 90, 17, 21, 73, 42, 28, 30, 69, 29, 32, 46, 10, 65, 41, 55,
               85, 12, 16, 95, 81, 20, 57, 23, 14, 66, 18, 47, 56, 37, 84]

Rotors_1_N = [65, 79, 30, 13, 71, 76, 74, 34, 10, 68, 44, 93, 0, 21, 11, 41, 62, 33, 40, 81, 18, 49, 66, 86, 45, 80, 72,
              82, 83, 7, 73, 78, 63, 2, 57, 90, 61, 60, 87, 53, 36, 29, 85, 91, 38, 47, 51, 5, 84, 50, 89, 69, 39, 88,
              95, 58, 67, 54, 20, 94, 48, 23, 9, 56, 77, 16, 25, 14, 19, 92, 59, 28, 32, 42, 46, 17, 12, 55, 4, 6, 64,
              3, 43, 22, 24, 37, 35, 26, 8, 70, 75, 15, 31, 27, 1, 52]
Rotors_2_N = [73, 28, 68, 13, 57, 38, 7, 53, 62, 54, 91, 78, 48, 64, 42, 94, 2, 22, 82, 17, 21, 60, 81, 71, 45, 65, 11,
              31, 9, 40, 5, 55, 58, 0, 18, 12, 41, 56, 51, 23, 50, 67, 79, 76, 49, 95, 36, 29, 1, 24, 52, 16, 46, 83,
              37, 30, 14, 20, 4, 35, 15, 63, 69, 59, 34, 32, 75, 72, 43, 19, 86, 3, 74, 84, 27, 25, 92, 87, 6, 93, 66,
              90, 88, 70, 26, 80, 10, 85, 33, 44, 8, 47, 89, 77, 39, 61]
Rotors_3_N = [33, 5, 22, 6, 16, 42, 94, 80, 92, 37, 85, 46, 68, 12, 88, 47, 67, 11, 49, 55, 61, 29, 83, 60, 79, 82, 53,
              95, 27, 87, 75, 19, 17, 15, 35, 69, 93, 28, 13, 90, 8, 10, 91, 72, 48, 65, 2, 25, 36, 62, 31, 70, 51, 63,
              81, 26, 45, 89, 52, 41, 59, 71, 4, 40, 58, 34, 30, 64, 50, 86, 84, 24, 9, 56, 57, 18, 76, 39, 54, 32, 73,
              21, 43, 20, 3, 44, 7, 77, 78, 38, 1, 23, 66, 0, 14, 74]
Rotors_4_N = [45, 14, 69, 58, 29, 86, 37, 56, 51, 27, 8, 70, 65, 16, 21, 84, 22, 48, 44, 89, 35, 34, 71, 95, 13, 73, 81,
              46, 7, 36, 5, 24, 50, 67, 74, 87, 10, 20, 26, 78, 31, 0, 30, 28, 38, 43, 88, 93, 2, 83, 72, 91, 82, 49,
              61, 60, 79, 57, 90, 17, 94, 77, 66, 59, 33, 64, 9, 47, 3, 80, 25, 63, 92, 11, 54, 39, 41, 4, 32, 55, 12,
              53, 19, 76, 85, 68, 23, 6, 62, 15, 1, 42, 18, 75, 40, 52]
Rotors_5_N = [58, 86, 55, 33, 69, 9, 71, 94, 64, 91, 27, 66, 8, 65, 17, 67, 92, 15, 62, 56, 95, 44, 46, 81, 16, 21, 57,
              87, 11, 72, 60, 89, 76, 49, 4, 61, 85, 7, 2, 41, 73, 13, 18, 74, 10, 25, 40, 84, 37, 36, 75, 82, 52, 3,
              88, 78, 93, 30, 59, 31, 1, 32, 39, 34, 26, 50, 45, 63, 29, 24, 80, 77, 43, 79, 28, 5, 12, 23, 54, 70, 38,
              90, 6, 47, 83, 20, 35, 51, 0, 53, 19, 22, 48, 14, 68, 42]


def limit(num):
    if num > 95:
        return num - 96
    elif num < 0:
        return num + 96
    else:
        return num


CODE = input("CODE:")

CODE1 = ord(CODE[0]) - 31
CODE2 = ord(CODE[1]) - 31
CODE3 = ord(CODE[2]) - 31

ENCODE = ""

print("-------------ENCODE-------------")

WORD = input("INPUT: ")
for index in range(len(WORD)):

    WORD = WORD.replace('µ', '\x1f')

    ENCODE += chr(
        Rotors_1_N[limit(Rotors_2_N[limit(Rotors_3_N[limit(Reflector_1[limit(Rotors_3_P[limit(Rotors_2_P[limit(
            Rotors_1_P[ord(WORD[index]) - 31] + CODE1)] + CODE2)] + CODE3)] - CODE3)] - CODE2)] - CODE1)] + 31)

    ENCODE = ENCODE.replace('\x1f', 'µ')

    CODE1 += 1
    if CODE1 > 95:
        CODE1 = 0
        CODE2 += 1
    if CODE2 > 95:
        CODE2 = 0
        CODE3 += 1
    if CODE3 > 95:
        CODE3 = 0

print("OUTPUT:" + ENCODE)

print("-------------DECODE-------------")

CODE1 = ord(CODE[0]) - 31
CODE2 = ord(CODE[1]) - 31
CODE3 = ord(CODE[2]) - 31

ENCODE = ""

WORD = input("INPUT: ")
for index in range(len(WORD)):

    WORD = WORD.replace('µ', '\x1f')

    ENCODE += chr(
        Rotors_1_N[limit(Rotors_2_N[limit(Rotors_3_N[limit(Reflector_1[limit(Rotors_3_P[limit(Rotors_2_P[limit(
            Rotors_1_P[ord(WORD[index]) - 31] + CODE1)] + CODE2)] + CODE3)] - CODE3)] - CODE2)] - CODE1)] + 31)

    ENCODE = ENCODE.replace('\x1f', 'µ')

    CODE1 += 1
    if CODE1 > 95:
        CODE1 = 0
        CODE2 += 1
    if CODE2 > 95:
        CODE2 = 0
        CODE3 += 1
    if CODE3 > 95:
        CODE3 = 0

print("OUTPUT:" + ENCODE)
